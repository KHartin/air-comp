int <- order(mass.in.points$conc)
int_sorted <- mass.in.points[int,]
plot(conc ~ inrank, data = mass.site, type = "n", log="y",axes = FALSE,
frame.plot=TRUE,ylab =
expression(paste("Concentration ( ",mu,"g/m^3",")",sep ="")),
xlab="Site Number",main="")
points(mass.in.points$inrank,mass.in.points$conc,col=1,pch=19)
points(mass.out.points$inrank,mass.out.points$conc,col=8,pch=15)
Axis(side=1, at = 1:9, labels=c(6,9,7,4,1,2,5,8,3))
Axis(side=2, labels=TRUE)
abline(h=35, lty=4, col=1)
legend("topleft", c("Indoor","Outdoor","NAAQS 35 ug/m^3"),col=c(1,8,1),
pch=c(19,15,NA),lty=c(NA,NA,4))
View(mass.site)
View(int_sorted)
View(int_sorted)
View(mass.in.points)
plot(conc ~ inrank, data = mass.site, type = "n", log="y",axes = FALSE,
frame.plot=TRUE,ylab =
expression(paste("Concentration ( ",mu,"g/m^3",")",sep ="")),
xlab="Site Number",main="")
points(mass.in.points$inrank,mass.in.points$conc,col=1,pch=19)
points(mass.out.points$inrank,mass.out.points$conc,col=8,pch=15)
Axis(side=1, at = 1:9, labels=c(5,6,9,4,7,1,3,8,2))
Axis(side=2, labels=TRUE)
abline(h=35, lty=4, col=1)
legend("topleft", c("Indoor","Outdoor","NAAQS 35 ug/m^3"),col=c(1,8,1),
pch=c(19,15,NA),lty=c(NA,NA,4))
par(mfrow=c(2,1))
plot(conc ~ sitenum, data = mass.site, type = "n", log="y",axes = FALSE,
frame.plot=TRUE,ylab =
expression(paste("Concentration ( ",mu,"g/m^3",")",sep ="")),
xlab="Site Number",main="")
points(conc ~ sitenum,data = subset(mass.site, location == "Home"), col=1,pch=19)
points(conc ~ sitenum,data = subset(mass.site, location == "Ambient"), col=8,pch=15)
Axis(side=1, at = 1:9, labels=c(1:9))
Axis(side=2, labels=TRUE)
abline(h=35, lty=4, col=1)
legend("topright", c("Indoor","Outdoor","NAAQS 35 ug/m^3"),col=c(1,8,1),
pch=c(19,15,NA),lty=c(NA,NA,4))
mass.site[,"inrank"] <- c(6,6,9,9,7,7,4,4,1,1,2,2,5,5,8,8,3,3)
mass.in.points <- subset(mass.site, location == "Home")
mass.out.points <- subset(mass.site, location == "Ambient")
int <- order(mass.in.points$conc)
int_sorted <- mass.in.points[int,]
plot(conc ~ inrank, data = mass.site, type = "n", log="y",axes = FALSE,
frame.plot=TRUE,ylab =
expression(paste("Concentration ( ",mu,"g/m^3",")",sep ="")),
xlab="Site Number",main="")
points(mass.in.points$inrank,mass.in.points$conc,col=1,pch=19)
points(mass.out.points$inrank,mass.out.points$conc,col=8,pch=15)
Axis(side=1, at = 1:9, labels=c(5,6,9,4,7,1,3,8,2))
Axis(side=2, labels=TRUE)
abline(h=35, lty=4, col=1)
legend("topleft", c("Indoor","Outdoor","NAAQS 35 ug/m^3"),col=c(1,8,1),
pch=c(19,15,NA),lty=c(NA,NA,4))
file_PC <- c("C:/Users/KGH/OneDrive/Documents/Xuanwei/air-comp/Xuanwei_ForAnalysis_Test.csv")
X <- subset(read.csv(file_PC),village != "Xuanwei")
#Summary Stats ####
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -#
#Summarize Data By Site, Location                                              #
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -#
##AM Conc of Components by Site, Location, Village
mass.site <- droplevels(
summaryBy(conc ~ sitenum + location + village, data=X,id = NULL,
keep.names=TRUE, FUN=mean, na.rm = TRUE))
mass.site.table <- mass.site
mass.site.table[,4] <- round(mass.site.table[,4],0)
colnames(mass.site.table) <- c("Site Number", "Compartment", "Village",
"Mass Conc")
mass.site.table
levo.site <- droplevels(
summaryBy( Levo_ugV ~ sitenum + location + village, data=X, id = NULL,
keep.names=TRUE, FUN=mean, na.rm = TRUE))
levo.site.table <- levo.site
levo.site.table[,4] <- round(levo.site.table[,4],5)
colnames(levo.site.table) <- c("Site Number", "Compartment", "Village",
"Levo Conc")
levo.site.table
nitro.site <- droplevels(
summaryBy( X1NP_ugV + X2NP_ugV + X2NFL_ugV ~ sitenum + location + village,
data=X, id = NULL, keep.names=TRUE, FUN=mean, na.rm = TRUE))
nitro.site.table <- nitro.site
nitro.site.table[,4:6] <- round(nitro.site.table[,4:6],6)
colnames(nitro.site.table) <- c("Site Number", "Compartment", "Village",
"1NP Conc", "2NP Conc", "2NFL Conc")
nitro.site.table
BaP.site <- droplevels(
summaryBy( Benzo.a.pyrene_ugV  ~ sitenum + location + village,
data=X, id = NULL, keep.names=TRUE, FUN=mean, na.rm = TRUE))
BaP.site.table <- BaP.site
BaP.site.table[,4] <- round(BaP.site.table[,4],4)
colnames(BaP.site.table) <- c("Site Number", "Compartment", "Village",
"BaP Conc")
BaP.site.table
metals <- droplevels(
summaryBy( PbConcV + AsConcV + SeConcV  ~ sitenum + location, data=X,
id = NULL, keep.names=TRUE, FUN=mean, na.rm = TRUE))
#Scatterplots####
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -#
#Scatterplot Data By Site, Location                                            #
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -#
##AM Mass by Site Showing NAAQS 24hr (35 ug/m3)
plot(conc ~ sitenum, data = mass.site, type = "n", log="y",axes = FALSE,
frame.plot=TRUE,ylab =
expression(paste("Concentration ( ",mu,"g/m^3",")",sep ="")),
xlab="Site Number",main="")
points(conc ~ sitenum,data = subset(mass.site, location == "Home"),
col=1,pch=19)
points(conc ~ sitenum,data = subset(mass.site, location == "Ambient"),
col=8,pch=15)
Axis(side=1, at = 1:9, labels=c(1:9))
Axis(side=2, labels=TRUE)
abline(h=35, lty=4, col=1)
legend("topright", c("Indoor","Outdoor","NAAQS 35 ug/m^3"),col=c(1,8,1),
pch=c(19,15,NA),lty=c(NA,NA,4))
##AM Mass by Site Showing NAAQS 24hr (35 ug/m3), Arranged by Indoor Conc
mass.site[,"inrank"] <- c(6,6,9,9,7,7,4,4,1,1,2,2,5,5,8,8,3,3)
mass.in.points <- subset(mass.site, location == "Home")
mass.out.points <- subset(mass.site, location == "Ambient")
int <- order(mass.in.points$conc)
int_sorted <- mass.in.points[int,]
plot(conc ~ inrank, data = mass.site, type = "n", log="y",axes = FALSE,
frame.plot=TRUE,ylab =
expression(paste("Concentration ( ",mu,"g/m^3",")",sep ="")),
xlab="Site Number",main="")
points(mass.in.points$inrank,mass.in.points$conc,col=1,pch=19)
points(mass.out.points$inrank,mass.out.points$conc,col=8,pch=15)
Axis(side=1, at = 1:9, labels=c(5,6,9,4,7,1,3,8,2))
Axis(side=2, labels=TRUE)
abline(h=35, lty=4, col=1)
legend("topleft", c("Indoor","Outdoor","NAAQS 35 ug/m^3"),col=c(1,8,1),
pch=c(19,15,NA),lty=c(NA,NA,4))
#Boxplots####
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -#
#Boxplots by Village                                                           #
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -#
##Mass with NAAQS 24hr (35 ug/m3)
boxplot(conc ~ village, data=mass.site, pch=19,
ylab=expression(paste("PM2.5 ( ",mu,"g/m^3",")",sep ="")),
main="",xlab = "Village", log="y", ylim=c(20,2000))
beeswarm(conc~village, data=mass.site, pwpch=ifelse(location=="Home",19,15),
pwcol=ifelse(location=="Home",1,8),log="TRUE", add=TRUE,
ylim=c(20,2000))
abline(h=35, lty=4, col=1)
legend("topright", c("Indoor", "Outdoor","NAAQS 35 ug/m^3"),
col=c(1,8), pch=c(19,15,NA),lty=c(NA,NA,4))
###Levoglucosan
boxplot(Levo_ugV ~ village, data=levo.site, pch=19,
ylab=expression(paste("Levoglucosan ( ",mu,"g/m^3",")",sep ="")),
main="",xlab = "Village", log="y")
beeswarm(Levo_ugV~village, data=levo.site, pwpch=ifelse(location=="Home",19,15),
pwcol=ifelse(location=="Home",1,8),log="TRUE", add=TRUE)
legend("topright", c("Indoor", "Outdoor"),
col=c(1,8), pch=c(19,15))
###Benzo[a]pyrene
boxplot(Benzo.a.pyrene_ugV ~ village, data=BaP.site, pch=19,
ylab=expression(paste("Benzo[a]pyrene ( ",mu,"g/m^3",")",sep ="")),
main="",xlab = "Village", log="y")
beeswarm(Benzo.a.pyrene_ugV ~ village, data=BaP.site, pwpch=ifelse(
location=="Home",19,15), pwcol=ifelse(location=="Home",1,8),
log="TRUE", add=TRUE)
legend("topright", c("Indoor", "Outdoor"),
col=c(1,8), pch=c(19,15))
###Nitro-PAH, Native Plot
par(mfrow=c(1,3))
boxplot(X1NP_ugV ~ village, data=nitro.site, pch=19,
ylab=expression(paste("1-NP ( ",mu,"g/m^3",")",sep ="")),
main="", log="y", ylim=c(2e-05,2e-02))
beeswarm(X1NP_ugV ~ village, data=nitro.site,
pwpch=ifelse(location=="Home",19,15),
pwcol=ifelse(location=="Home",1,8),log="TRUE", add=TRUE,
ylim=c(2e-05,2e-02))
boxplot(X2NP_ugV ~ village, data=nitro.site, pch=19,
ylab=expression(paste("2-NP ( ",mu,"g/m^3",")",sep ="")),
main="",xlab = "Village", log="y", ylim=c(2e-05,2e-02))
beeswarm(X2NP_ugV ~ village, data=nitro.site,
pwpch=ifelse(location=="Home",19,15),
pwcol=ifelse(location=="Home",1,8),log="TRUE", add=TRUE,
ylim=c(2e-05,2e-02))
boxplot(X2NFL_ugV ~ village, data=nitro.site, pch=19,
ylab=expression(paste("2-NFL ( ",mu,"g/m^3",")",sep ="")),
main="", log="y", ylim=c(2e-05,2e-02))
beeswarm(X2NFL_ugV ~ village, data=nitro.site,
pwpch=ifelse(location=="Home",19,15),
pwcol=ifelse(location=="Home",1,8),log="TRUE", add=TRUE,
ylim=c(2e-05,2e-02))
legend("topright", c("Indoor", "Outdoor"),
col=c(1,8), pch=c(19,15))
par(mfrow=c(1,1))
###Nitro-PAH by Village, GG Plot
am.nitro.m <- melt(nitro.site, id.vars = c("sitenum", "location", "village"))
bxp.NP <- ggplot(am.nitro.m, aes(x=village, y=value))
bwPalette <- c("#999999", "#CCCCCC", "#FFFFFF")
bxp.NP + scale_y_continuous(trans=log10_trans()) + ylab(expression(
paste("Concentration ( ",mu,"g/m^3",")",sep =""))) + xlab("Village") +
geom_boxplot(aes(fill = variable)) + theme_bw() +
scale_fill_manual(values=bwPalette, name = "Nitro PAH",
labels = c("2-NP", "2-NFL","1-NP"))
#Indoor vs Outdoor####
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -#
#Significant Difference Between Indoor / Outdoor Concentrations                #
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -#
##Wilcox / Mann-Whitney Test
###Mass
in.mass <- subset(mass.site, location == "Home")
out.mass <- subset(mass.site, location == "Ambient")
mass.wil <- wilcox.test(in.mass$conc,out.mass$conc, paired = FALSE)
mass.wil2 <- wilcox.test(in.mass$conc,out.mass$conc, paired = TRUE)
###Levoglucosan
in.levo <- subset(levo.site, location == "Home")
out.levo <- subset(levo.site, location == "Ambient")
levo.wil <- wilcox.test(in.levo$Levo_ugV,out.levo$Levo_ugV, paired = FALSE)
levo.wil2 <- wilcox.test(in.levo$Levo_ugV,out.levo$Levo_ugV, paired = TRUE)
###1-Nitropyrene
in.nitro <- subset(nitro.site, location == "Home")
out.nitro <- subset(nitro.site, location == "Ambient")
x1np.wil <- wilcox.test(in.nitro$X1NP_ugV,out.nitro$X1NP_ugV, paired = FALSE)
x1np.wil2 <- wilcox.test(in.nitro$X1NP_ugV,out.nitro$X1NP_ugV, paired = TRUE)
###Benzo[A]pyrene
in.BaP <- subset(BaP.site, location == "Home")
out.BaP <- subset(BaP.site, location == "Ambient")
BaP.wil <- wilcox.test(in.BaP$Benzo.a.pyrene_ugV,out.BaP$Benzo.a.pyrene_ugV,
paired = FALSE)
BaP.wil2 <- wilcox.test(in.BaP$Benzo.a.pyrene_ugV,out.BaP$Benzo.a.pyrene_ugV,
paired = TRUE)
##Kruskal-Wallis Test
###Mass
mass.kw <- kruskal.test(conc ~ location, data = mass.site)
###Levoglucosan
levo.kw <- kruskal.test(Levo_ugV ~ location, data = levo.site)
###1-Nitropyrene
x1np.kw <- kruskal.test(X1NP_ugV ~ location, data = nitro.site)
###Benzo[A]pyrene
BaP.kw <- kruskal.test(Benzo.a.pyrene_ugV ~location, data = BaP.site)
##Plot of Non-parametric test stats
#par(mar = c(5,5,2,5))
#par(new = TRUE)
#wilcox.stat <- c(mass.wilcox$statistic, levo.wilcox$statistic,
#                 NP1.wilcox$statistic,BaP.wilcox$statistic)
#plot(wilcox.stat, type = "n",axes = FALSE,
#     frame.plot=TRUE,ylab = "P Value", xlab="Component",main="")
#mtext(side = 4, line = 3, "W Stat")
#text(wilcox.p, pos = 4, labels = wilcox.stat)
wil.p <- c(mass.wil$p.value, levo.wil$p.value, x1np.wil$p.value,
BaP.wil$p.value)
wil2.p <- c(mass.wil2$p.value, levo.wil2$p.value, x1np.wil2$p.value,
BaP.wil2$p.value)
kw.p <- c(mass.kw$p.value, levo.kw$p.value, x1np.kw$p.value,
BaP.kw$p.value)
labels(wil.p,c("Mass", "Levo", "1-NP", "BaP"))
plot(wil.p, type = "n",axes = FALSE, frame.plot=TRUE,
ylab = "P Value", xlab="Component",main="")
points(wil.p, pch = 25)
points(wil2.p, pch = 20)
points(kw.p, pch = 0)
Axis(side=2, labels=TRUE)
Axis(side=1, at = 1:4, labels=c("Mass", "Levo", "1-NP", "BaP"))
legend("topleft", c("Mann-Whitney", "Signed-Rank", "Kruskal-Wallis"), pch=c(25,20,0))
#Between Villages####
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -#
#Significant Concentration Difference Between Villages                         #
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -#
##Kruskal-Wallis Test
###Mass
mass.kw <- kruskal.test(conc ~ village, data = mass.site)
###Levoglucosan
levo.kw <- kruskal.test(Levo_ugV ~ village, data = levo.site)
###1-Nitropyrene
x1np.kw <- kruskal.test(X1NP_ugV ~ village, data = nitro.site)
###Benzo[A]pyrene
BaP.kw <- kruskal.test(Benzo.a.pyrene_ugV ~ village, data = BaP.site)
##Plot of Kruskal-Wallis Test Stats
kw.p <- c(mass.kw$p.value, levo.kw$p.value, x1np.kw$p.value,BaP.kw$p.value)
labels(kw.p,c("Mass", "Levo", "1-NP", "BaP"))
plot(kw.p, type = "n",axes = FALSE,frame.plot=TRUE, ylab = "P Value",
xlab="Component", main="", ylim = c(0.0,1.0))
points(kw.p)
Axis(side=2, labels=TRUE)
Axis(side=1, at = 1:4, labels=c("Mass", "Levo", "1-NP", "BaP"))
pkg <- c("doBy", "psych", "beeswarm", "ggplot2", "reshape2", "scales")
for (i in seq(length(pkg))) {
library(pkg[i], character.only = TRUE)
}
##From UW
#file_UW <- c("C:/Users/khartin/Desktop/Xuanwei_ForAnalysis_Test.csv")
##X <- subset(read.csv(file_UW),village != "Xuanwei")
##From PC
file_PC <- c("C:/Users/KGH/OneDrive/Documents/Xuanwei/air-comp/Xuanwei_ForAnalysis_Test.csv")
X <- subset(read.csv(file_PC),village != "Xuanwei")
#Summary Stats ####
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -#
#Summarize Data By Site, Location                                              #
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -#
##AM Conc of Components by Site, Location, Village
mass.site <- droplevels(
summaryBy(conc ~ sitenum + location + village, data=X,id = NULL,
keep.names=TRUE, FUN=mean, na.rm = TRUE))
mass.site.table <- mass.site
mass.site.table[,4] <- round(mass.site.table[,4],0)
colnames(mass.site.table) <- c("Site Number", "Compartment", "Village",
"Mass Conc")
mass.site.table
levo.site <- droplevels(
summaryBy( Levo_ugV ~ sitenum + location + village, data=X, id = NULL,
keep.names=TRUE, FUN=mean, na.rm = TRUE))
levo.site.table <- levo.site
levo.site.table[,4] <- round(levo.site.table[,4],5)
colnames(levo.site.table) <- c("Site Number", "Compartment", "Village",
"Levo Conc")
levo.site.table
nitro.site <- droplevels(
summaryBy( X1NP_ugV + X2NP_ugV + X2NFL_ugV ~ sitenum + location + village,
data=X, id = NULL, keep.names=TRUE, FUN=mean, na.rm = TRUE))
nitro.site.table <- nitro.site
nitro.site.table[,4:6] <- round(nitro.site.table[,4:6],6)
colnames(nitro.site.table) <- c("Site Number", "Compartment", "Village",
"1NP Conc", "2NP Conc", "2NFL Conc")
nitro.site.table
BaP.site <- droplevels(
summaryBy( Benzo.a.pyrene_ugV  ~ sitenum + location + village,
data=X, id = NULL, keep.names=TRUE, FUN=mean, na.rm = TRUE))
BaP.site.table <- BaP.site
BaP.site.table[,4] <- round(BaP.site.table[,4],4)
colnames(BaP.site.table) <- c("Site Number", "Compartment", "Village",
"BaP Conc")
BaP.site.table
metals <- droplevels(
summaryBy( PbConcV + AsConcV + SeConcV  ~ sitenum + location, data=X,
id = NULL, keep.names=TRUE, FUN=mean, na.rm = TRUE))
#Scatterplots####
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -#
#Scatterplot Data By Site, Location                                            #
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -#
##AM Mass by Site Showing NAAQS 24hr (35 ug/m3)
plot(conc ~ sitenum, data = mass.site, type = "n", log="y",axes = FALSE,
frame.plot=TRUE,ylab =
expression(paste("Concentration ( ",mu,"g/m^3",")",sep ="")),
xlab="Site Number",main="")
points(conc ~ sitenum,data = subset(mass.site, location == "Home"),
col=1,pch=19)
points(conc ~ sitenum,data = subset(mass.site, location == "Ambient"),
col=8,pch=15)
Axis(side=1, at = 1:9, labels=c(1:9))
Axis(side=2, labels=TRUE)
abline(h=35, lty=4, col=1)
legend("topright", c("Indoor","Outdoor","NAAQS 35 ug/m^3"),col=c(1,8,1),
pch=c(19,15,NA),lty=c(NA,NA,4))
##AM Mass by Site Showing NAAQS 24hr (35 ug/m3), Arranged by Indoor Conc
mass.site[,"inrank"] <- c(6,6,9,9,7,7,4,4,1,1,2,2,5,5,8,8,3,3)
mass.in.points <- subset(mass.site, location == "Home")
mass.out.points <- subset(mass.site, location == "Ambient")
int <- order(mass.in.points$conc)
int_sorted <- mass.in.points[int,]
plot(conc ~ inrank, data = mass.site, type = "n", log="y",axes = FALSE,
frame.plot=TRUE,ylab =
expression(paste("Concentration ( ",mu,"g/m^3",")",sep ="")),
xlab="Site Number",main="")
points(mass.in.points$inrank,mass.in.points$conc,col=1,pch=19)
points(mass.out.points$inrank,mass.out.points$conc,col=8,pch=15)
Axis(side=1, at = 1:9, labels=c(5,6,9,4,7,1,3,8,2))
Axis(side=2, labels=TRUE)
abline(h=35, lty=4, col=1)
legend("topleft", c("Indoor","Outdoor","NAAQS 35 ug/m^3"),col=c(1,8,1),
pch=c(19,15,NA),lty=c(NA,NA,4))
#Boxplots####
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -#
#Boxplots by Village                                                           #
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -#
##Mass with NAAQS 24hr (35 ug/m3)
boxplot(conc ~ village, data=mass.site, pch=19,
ylab=expression(paste("PM2.5 ( ",mu,"g/m^3",")",sep ="")),
main="",xlab = "Village", log="y", ylim=c(20,2000))
beeswarm(conc~village, data=mass.site, pwpch=ifelse(location=="Home",19,15),
pwcol=ifelse(location=="Home",1,8),log="TRUE", add=TRUE,
ylim=c(20,2000))
abline(h=35, lty=4, col=1)
legend("topright", c("Indoor", "Outdoor","NAAQS 35 ug/m^3"),
col=c(1,8), pch=c(19,15,NA),lty=c(NA,NA,4))
###Levoglucosan
boxplot(Levo_ugV ~ village, data=levo.site, pch=19,
ylab=expression(paste("Levoglucosan ( ",mu,"g/m^3",")",sep ="")),
main="",xlab = "Village", log="y")
beeswarm(Levo_ugV~village, data=levo.site, pwpch=ifelse(location=="Home",19,15),
pwcol=ifelse(location=="Home",1,8),log="TRUE", add=TRUE)
legend("topright", c("Indoor", "Outdoor"),
col=c(1,8), pch=c(19,15))
###Benzo[a]pyrene
boxplot(Benzo.a.pyrene_ugV ~ village, data=BaP.site, pch=19,
ylab=expression(paste("Benzo[a]pyrene ( ",mu,"g/m^3",")",sep ="")),
main="",xlab = "Village", log="y")
beeswarm(Benzo.a.pyrene_ugV ~ village, data=BaP.site, pwpch=ifelse(
location=="Home",19,15), pwcol=ifelse(location=="Home",1,8),
log="TRUE", add=TRUE)
legend("topright", c("Indoor", "Outdoor"),
col=c(1,8), pch=c(19,15))
###Nitro-PAH, Native Plot
par(mfrow=c(1,3))
boxplot(X1NP_ugV ~ village, data=nitro.site, pch=19,
ylab=expression(paste("1-NP ( ",mu,"g/m^3",")",sep ="")),
main="", log="y", ylim=c(2e-05,2e-02))
beeswarm(X1NP_ugV ~ village, data=nitro.site,
pwpch=ifelse(location=="Home",19,15),
pwcol=ifelse(location=="Home",1,8),log="TRUE", add=TRUE,
ylim=c(2e-05,2e-02))
boxplot(X2NP_ugV ~ village, data=nitro.site, pch=19,
ylab=expression(paste("2-NP ( ",mu,"g/m^3",")",sep ="")),
main="",xlab = "Village", log="y", ylim=c(2e-05,2e-02))
beeswarm(X2NP_ugV ~ village, data=nitro.site,
pwpch=ifelse(location=="Home",19,15),
pwcol=ifelse(location=="Home",1,8),log="TRUE", add=TRUE,
ylim=c(2e-05,2e-02))
boxplot(X2NFL_ugV ~ village, data=nitro.site, pch=19,
ylab=expression(paste("2-NFL ( ",mu,"g/m^3",")",sep ="")),
main="", log="y", ylim=c(2e-05,2e-02))
beeswarm(X2NFL_ugV ~ village, data=nitro.site,
pwpch=ifelse(location=="Home",19,15),
pwcol=ifelse(location=="Home",1,8),log="TRUE", add=TRUE,
ylim=c(2e-05,2e-02))
legend("topright", c("Indoor", "Outdoor"),
col=c(1,8), pch=c(19,15))
par(mfrow=c(1,1))
###Nitro-PAH by Village, GG Plot
am.nitro.m <- melt(nitro.site, id.vars = c("sitenum", "location", "village"))
bxp.NP <- ggplot(am.nitro.m, aes(x=village, y=value))
bwPalette <- c("#999999", "#CCCCCC", "#FFFFFF")
bxp.NP + scale_y_continuous(trans=log10_trans()) + ylab(expression(
paste("Concentration ( ",mu,"g/m^3",")",sep =""))) + xlab("Village") +
geom_boxplot(aes(fill = variable)) + theme_bw() +
scale_fill_manual(values=bwPalette, name = "Nitro PAH",
labels = c("2-NP", "2-NFL","1-NP"))
#Indoor vs Outdoor####
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -#
#Significant Difference Between Indoor / Outdoor Concentrations                #
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -#
##Wilcox / Mann-Whitney Test
###Mass
in.mass <- subset(mass.site, location == "Home")
out.mass <- subset(mass.site, location == "Ambient")
mass.wil <- wilcox.test(in.mass$conc,out.mass$conc, paired = FALSE)
mass.wil2 <- wilcox.test(in.mass$conc,out.mass$conc, paired = TRUE)
###Levoglucosan
in.levo <- subset(levo.site, location == "Home")
out.levo <- subset(levo.site, location == "Ambient")
levo.wil <- wilcox.test(in.levo$Levo_ugV,out.levo$Levo_ugV, paired = FALSE)
levo.wil2 <- wilcox.test(in.levo$Levo_ugV,out.levo$Levo_ugV, paired = TRUE)
###1-Nitropyrene
in.nitro <- subset(nitro.site, location == "Home")
out.nitro <- subset(nitro.site, location == "Ambient")
x1np.wil <- wilcox.test(in.nitro$X1NP_ugV,out.nitro$X1NP_ugV, paired = FALSE)
x1np.wil2 <- wilcox.test(in.nitro$X1NP_ugV,out.nitro$X1NP_ugV, paired = TRUE)
###Benzo[A]pyrene
in.BaP <- subset(BaP.site, location == "Home")
out.BaP <- subset(BaP.site, location == "Ambient")
BaP.wil <- wilcox.test(in.BaP$Benzo.a.pyrene_ugV,out.BaP$Benzo.a.pyrene_ugV,
paired = FALSE)
BaP.wil2 <- wilcox.test(in.BaP$Benzo.a.pyrene_ugV,out.BaP$Benzo.a.pyrene_ugV,
paired = TRUE)
##Kruskal-Wallis Test
###Mass
mass.kw <- kruskal.test(conc ~ location, data = mass.site)
###Levoglucosan
levo.kw <- kruskal.test(Levo_ugV ~ location, data = levo.site)
###1-Nitropyrene
x1np.kw <- kruskal.test(X1NP_ugV ~ location, data = nitro.site)
###Benzo[A]pyrene
BaP.kw <- kruskal.test(Benzo.a.pyrene_ugV ~location, data = BaP.site)
##Plot of Non-parametric test stats
#par(mar = c(5,5,2,5))
#par(new = TRUE)
#wilcox.stat <- c(mass.wilcox$statistic, levo.wilcox$statistic,
#                 NP1.wilcox$statistic,BaP.wilcox$statistic)
#plot(wilcox.stat, type = "n",axes = FALSE,
#     frame.plot=TRUE,ylab = "P Value", xlab="Component",main="")
#mtext(side = 4, line = 3, "W Stat")
#text(wilcox.p, pos = 4, labels = wilcox.stat)
wil.p <- c(mass.wil$p.value, levo.wil$p.value, x1np.wil$p.value,
BaP.wil$p.value)
wil2.p <- c(mass.wil2$p.value, levo.wil2$p.value, x1np.wil2$p.value,
BaP.wil2$p.value)
kw.p <- c(mass.kw$p.value, levo.kw$p.value, x1np.kw$p.value,
BaP.kw$p.value)
labels(wil.p,c("Mass", "Levo", "1-NP", "BaP"))
plot(wil.p, type = "n",axes = FALSE, frame.plot=TRUE,
ylab = "P Value", xlab="Component",main="")
points(wil.p, pch = 25)
points(wil2.p, pch = 20)
points(kw.p, pch = 0)
Axis(side=2, labels=TRUE)
Axis(side=1, at = 1:4, labels=c("Mass", "Levo", "1-NP", "BaP"))
legend("topleft", c("Mann-Whitney", "Signed-Rank", "Kruskal-Wallis"), pch=c(25,20,0))
#Between Villages####
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -#
#Significant Concentration Difference Between Villages                         #
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -#
##Kruskal-Wallis Test
###Mass
mass.kw <- kruskal.test(conc ~ village, data = mass.site)
###Levoglucosan
levo.kw <- kruskal.test(Levo_ugV ~ village, data = levo.site)
###1-Nitropyrene
x1np.kw <- kruskal.test(X1NP_ugV ~ village, data = nitro.site)
###Benzo[A]pyrene
BaP.kw <- kruskal.test(Benzo.a.pyrene_ugV ~ village, data = BaP.site)
##Plot of Kruskal-Wallis Test Stats
kw.p <- c(mass.kw$p.value, levo.kw$p.value, x1np.kw$p.value,BaP.kw$p.value)
labels(kw.p,c("Mass", "Levo", "1-NP", "BaP"))
plot(kw.p, type = "n",axes = FALSE,frame.plot=TRUE, ylab = "P Value",
xlab="Component", main="", ylim = c(0.0,1.0))
points(kw.p)
Axis(side=2, labels=TRUE)
Axis(side=1, at = 1:4, labels=c("Mass", "Levo", "1-NP", "BaP"))
