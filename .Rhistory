#var.names <- names(X)[grepl("ConcV",names(X))] ##Update column names
#for loop AM of sites
v<-c(v,names(X)[grepl("ugV",names(X))])
this.formula <- as.character("conc~location + sitenum")
for (i in v){
this.formula <- paste(i,this.formula, sep = "+")
}
#Load dataset, exclude Xuanwei, view table - CURRENT WORKFLOW BELOW####
##file_locationUW <- C("H:/Seto_Projects/Xuanwei/Xuanwei_ForAnalysis_31Mar15.csv") ##From UW
#file_locationPC <- c("C:/Users/KGH/OneDrive/Documents/Xuanwei/Xuanwei_ForAnalysis_31Mar15.csv") ##From Surface
file_locationPC2 <- c("C:/Users/KGH/OneDrive/Documents/Xuanwei/Xuanwei_ForAnalysis_Test.csv") ##From Surface
##Xuanwei_ForAnalysis_31Mar15 <- read.csv(file_locationUW)
#Xuanwei_ForAnalysis_31Mar15 <- read.csv(file_locationPC)
#X<-subset(Xuanwei_ForAnalysis_31Mar15, village != "Xuanwei")
Xuanwei_ForAnalysis <- read.csv(file_locationPC2)
X2<-subset(Xuanwei_ForAnalysis, village != "Xuanwei")
#Count number of observations per location type #Not sure if necessary anymore####
#table(X$location)
#with(X,table(Concentration = conc,  sitenum))
#Summary By ####
#install.packages("doBy")
library(doBy)
##Subset data by location and create mean of concentrations
#Create new objects, one for Home and one for Ambient
##Create new objects -> Mean of sites, points for plotting by location ####
with(subset(X, location == "Home" & sitenum == 1), summary(conc)) #summaryBy way easuer
am.site <- summaryBy(conc ~ sitenum + location + village, data=X2, id = NULL, keep.names=TRUE, FUN=mean)
am.site <- droplevels(am.site)
am.in.points <- subset(am.site, location == "Home")
am.out.points <- subset(am.site, location == "Ambient")
##Points excluding the outlier sites 2,8####
am.site.no.2.8 <- subset(am.site, sitenum != 2 & sitenum != 8)
am.in.points.no.2.8 <- subset(am.site.no.2.8, location == "Home")
am.out.points.no.2.8 <- subset(am.site.no.2.8, location == "Ambient")
summaryBy(conc ~ sitenum + location, data=X, id = NULL, keep.names=TRUE, FUN=mean)
summaryBy(2NP_ugV ~ sitenum + location, data=X, id = NULL, keep.names=TRUE, FUN=mean)
summaryBy( X2NP_ugV + X2NFL_ugV  +  X1NP_ugV  ~ sitenum + location, data=X2, id = NULL, keep.names=TRUE, FUN=mean, na.rm = TRUE)
describeBy(X$conc, list(X$location, X$burn))
describeBy(X$conc, list(X$location,X$sitenum))
##Plots of Conc by Site Differentiating Indoor and Outdoor
#Plot Arithmetic Mean (AM) of Indoor and Dup Samples by Site Showing NAAQS 24hr (35 ug/m3)####
plot(conc~sitenum, data = am.site, type="n",log="y",ylab = expression(paste("Ambient Conc ",mu,"g/m^3","",sep ="")), xlab="",main="") #Why cannot control y range with ylim=c(0, 2000)?
points(am.in.points[,"conc"],col=1,pch=19)
points(am.out.points[,"conc"],col=8,pch=15)
abline(h=35, lty=4, col=1)
legend("topright", c("Indoor","Ambient","NAAQS 35 ug/m^3"),col=c(1,8,1),
pch=c(19,15,NA),lty=c(NA,NA,4))
#Boxplot of AM of Indoor and Dup Samples by Village Showing NAAQS 24hr (35 ug/m3)####
#install.packages('beeswarm')
library(beeswarm)
boxplot(conc~village, data=am.site, pch=19, ylab=expression(paste("Ambient Conc ",mu,"g/m^3","",sep ="")), main="",
log="y", ylim=c(20,2000))
beeswarm(conc~village, data=am.site, pch=19, pwcol=ifelse(location=="Home",1,8), log="TRUE",
add=TRUE, ylim=c(20,2000))
abline(h=35, lty=4, col=1)
legend("topright", c("Indoor", "Ambient","NAAQS 35 ug/m^3"), col=c(1,8), pch=c(19,15,NA),lty=c(NA,NA,4))
#Scatter plot of indoor vs outdoor####
##All sites
lm_byloc <- lm(am.out.points[,"conc"]~am.in.points[,"conc"])
###Summary details
cor(am.in.points[,"conc"],am.out.points[,"conc"])
[1] 0.09176041
attributes(lm_byloc)
lm_byloc$coefficients
y = 0.0009577x + 24.9727
summary(lm_byloc)
Call:
lm(formula = am.out.points[, "conc"] ~ am.in.points[, "conc"])
Residuals:
Min     1Q Median     3Q    Max
-8.641 -5.061 -1.980  4.424 15.829
Coefficients:
Estimate Std. Error t value Pr(>|t|)
(Intercept)            2.497e+01  3.004e+00   8.312 7.13e-05 ***
am.in.points[, "conc"] 9.577e-04  3.928e-03   0.244    0.814
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
Residual standard error: 8.19 on 7 degrees of freedom
Multiple R-squared:  0.00842,    Adjusted R-squared:  -0.1332
F-statistic: 0.05944 on 1 and 7 DF,  p-value: 0.8144
attributes(summary(lm_byloc.no28))
###Plot
plot(am.in.points[,"conc"], am.out.points[,"conc"],
main = expression(paste("Indoor vs Outdoor ",PM[2.5]," Conc", sep = "")),
xlab = expression(paste("Indoor Conc ",mu,"g/",m^3,"",sep ="")),
ylab = expression(paste("Ambient Conc ",mu,"g/",m^3,"",sep ="")))
abline(lm_byloc, untf=TRUE, col=1) # regression line (y~x)
legend("topright", bty="O", legend=paste("R2 is",format(summary(lm_byloc)$r.squared, digits=4)))
##Scatter plot of indoor vs outdoor Without outliers site 2 and 8####
lm_byloc.no28 <- lm(am.out.points.no.2.8[,"conc"]~am.in.points.no.2.8[,"conc"])
###Summary details
cor(am.in.points.no.2.8[,"conc"],am.out.points.no.2.8[,"conc"])
[1] 0.3542588
attributes(lm_byloc.no28)
lm_byloc.no28$coefficients
y = 0.1775105x + 16.7835245
summary(lm_byloc.no28)
attributes(summary(lm_byloc.no28))
Call:
lm(formula = am.out.points.no.2.8[, "conc"] ~ am.in.points.no.2.8[,"conc"])
Residuals:
1       2       3       4       5       6       7
-0.2781 -2.8211 -2.7167 -4.5912 -4.3231  6.8829  7.8473
Coefficients:
Estimate Std. Error t value Pr(>|t|)
(Intercept)                    16.7835     7.7478   2.166   0.0825 .
am.in.points.no.2.8[, "conc"]   0.1775     0.2096   0.847   0.4356
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
Residual standard error: 5.73 on 5 degrees of freedom
Multiple R-squared:  0.1255,    Adjusted R-squared:  -0.0494
F-statistic: 0.7175 on 1 and 5 DF,  p-value: 0.4356
###Plot
plot(am.in.points.no.2.8[,"conc"], am.out.points.no.2.8[,"conc"],
main = expression(paste("Indoor vs Outdoor without Outliers ",PM[2.5]," Conc", sep = "")),
xlab = expression(paste("Indoor Conc ",mu,"g/",m^3,"",sep ="")),
ylab = expression(paste("Ambient Conc ",mu,"g/m^3","",sep ="")))
abline(lm_byloc.no28, col=1) # regression line (y~x)
legend("topright", bty="O", legend=paste("R2 is",format(summary(lm_byloc.no28)$r.squared, digits=4)))
#lines(lowess(gm_site$conc[gm_site$location=="Home"], gm_site$conc[gm_site$location=="Ambient"]),
col="blue") # lowess line (x,y)
##Questionable code####
#detach(X)
#attach(X) #Try to refrain so no ambiguity or conflict after published
#Log of Concentrations
#logconc<-log(Xuanwei_Final$conc)
#gm = function(x, na.rm=TRUE){
#exp(sum(log(x[x > 0]), na.rm=na.rm) / length(x))
#}
#gm_site <- summaryBy(conc ~location + sitenum, data=X, id = "village", keep.names=TRUE, FUN=gm)
#avgsiteconce_home<- subset(X,location=="Home" & avgsiteconc!="na")
#avgsiteconce_ambient<- subset(Xuanwei_Final,village !="Xuanwei" & location=="Ambient" & avgsiteconc!="na")
#Plot arithmetic Mean of Indoor and Dup Samples Showing Mean and Median of Indoor and Ambient ####
plot(conc~sitenum, type="n",log="y",ylab="Concentration ug/m^3", xlab="Site Number",
main="PM2.5 Concentration by Site") #Why cannot control y range with ylim=c(0, 2000)?
points(ho_avgmeans_x,col=1,pch=19)
points(am_avgmeans_x,col=8,pch=15)
legend("topright", c("Indoor", "Mean","Median","Ambient", "Mean", "Median"),col=c(1,1,1,8,8,8),
pch=c(19,NA,NA,15,NA,NA),lty=c(NA,1,5,NA,3,4))
abline(h=mean(ho_avgmeans_x), lty=1, col=1)
abline(h=median(ho_avgmeans_x), lty=5, col=1)
abline(h=mean(am_avgmeans_x), lty=3, col=8)
abline(h=median(am_avgmeans_x), lty=4, col=8)
#Geometric Mean of Indoor and Dup Samples by Site Showing Geometric Mean and Median of Indoor and Ambient####
plot(conc~sitenum, type="n",log="y",ylab="Concentration ug/m^3", xlab="Site Number",
main="PM2.5 Concentration by Site") #Why cannot control y range with ylim=c(0, 2000)?
points(ho_gmeans_x,col=1,pch=19)
points(am_gmeans_x,col=8,pch=15)
legend("topright", c("Indoor", "GM","Median","Ambient", "GM", "Median"),col=c(1,1,1,8,8,8),
pch=c(19,NA,NA,15,NA,NA),lty=c(NA,1,5,NA,3,4))
abline(h=mean(ho_gmeans_x), lty=1, col=1)
abline(h=median(ho_gmeans_x), lty=5, col=1)
abline(h=mean(am_gmeans_x), lty=3, col=8)
abline(h=median(am_gmeans_x), lty=4, col=8)
#Plot of indoor/outdoor ratios
ratio_site <- summaryBy(conc~location + sitenum, data=gm_site, id = "village", keep.names=TRUE, FUN=gm)
##Scatter Plots of Conc
#Fancy Scatterplot
#install.packages('car')
#library(car)
#scatterplot(conc~sitenum | location, data=gm_site)
str(X2)
colnames(X2)
am.site.NP <- summaryBy(X1NP_ugV ~ sitenum + location + village, data=X2, id = NULL, keep.names=TRUE, FUN=mean)
boxplot(X1NP_ugV~village, data=am.site.NP, pch=19, ylab=expression(paste("Conc ",mu,"g/m^3","",sep ="")), main="",
log="y", ylim=c(20,2000))
am.site.NP <- droplevels(am.site.NP)
boxplot(X1NP_ugV~village, data=am.site.NP, pch=19, ylab=expression(paste("Conc ",mu,"g/m^3","",sep ="")), main="",
log="y", ylim=c(20,2000))
beeswarm(X1NP_ugV~village, data=am.site.NP, pch=19, pwcol=ifelse(location=="Home",1,8), log="TRUE",
add=TRUE, ylim=c(20,2000))
View(am.site.NP)
View(am.site.NP)
boxplot(X1NP_ugV~village, data=am.site.NP, pch=19, ylab=expression(paste("Conc ",mu,"g/m^3","",sep ="")), main="",
log="y")
beeswarm(X1NP_ugV~village, data=am.site.NP, pch=19, pwcol=ifelse(location=="Home",1,8), log="TRUE",
add=TRUE
)
legend("topright", c("Indoor", "Ambient"), col=c(1,8), pch=c(19,15))
am.site.NP <- summaryBy(X2NP_ugV + X2NFL_ugV + X1NP_ugV ~ sitenum + location + village, data=X2, id = NULL, keep.names=TRUE, FUN=mean)
head(am.site.NP)
?barplot
barplot(am.site.NP)
barplot(am.site.NP[,4:6])
View(am.site.NP)
View(am.site.NP)
am.site.NP.mat <- as.matrix(am.site.NP)
barplot(am.site.NP[,4:6])
barplot(am.site.NP.mat[,4:6])
barplot(am.site.NP.mat)
?barchart
require(stats)
## Tonga Trench Earthquakes
Depth <- equal.count(quakes$depth, number=8, overlap=.1)
xyplot(lat ~ long | Depth, data = quakes)
update(trellis.last.object(),
strip = strip.custom(strip.names = TRUE, strip.levels = TRUE),
par.strip.text = list(cex = 0.75),
aspect = "iso")
## Examples with data from `Visualizing Data' (Cleveland, 1993) obtained
## from http://cm.bell-labs.com/cm/ms/departments/sia/wsc/
barchart(am.site.NP.mat)
?barchart2
install.packages("lattices")
install.packages("lattice")
library(lattice)
?barchart2
library(xyplot)
install.packages("xyplot")
library(xyplot)
library("latticeExtra", lib.loc="~/R/win-library/3.1")
?barchart
?barchart2
barchart(am.site.NP.mat)
barchart(am.site.NP.mat[, 4:6])
barplot(am.site.NP.mat)
barplot(am.site.NP.mat[,4:6])
barchart(am.site.NP.mat[, 4:6])
barchart(X1NP_ugV ~ location | location, data = am.site.NP.mat, groups = location)
barchart(X1NP_ugV ~ location, data = am.site.NP.mat, groups = location)
barchart(location ~ X1NP_ugV, data = am.site.NP.mat, groups = location)
barplot(am.site.NP$X1NP_ugV, names = am.site.NP$location,
xlab = "Commodity", ylab = "Production (1,000 MT)",
main = "UK 2007 Top 5 Food and Agricultural Commodities")
barchart(location ~ X1NP_ugV, data = am.site.NP.mat, groups = location)
barplot(am.site.NP$X1NP_ugV, names = am.site.NP$location)
?barplot
barplot(am.site.NP.mat[,4:6], beside = TRUE)
barplot(am.site.NP[,4:6], beside = TRUE)
View(am.site.NP.mat)
View(am.site.NP.mat)
library("ggplot2", lib.loc="~/R/win-library/3.1")
install.packages("Deducer")
install.packages(c("JGR","Deducer","DeducerExtras"))
library(JGR)
JGR()
JGR()
require(shiny)
source("g3plot/shiny_extend_g3.R")
addResourcePath("js",tools:::file_path_as_absolute("./g3plot/js"))
shinyServer(function(input,output,session){
output$testplot = renderG3Plot(function() {
dataSet = data.frame(x=1:10,y=1:10)
list(type="plot",
table=forceTableVector(dataSet),
structure=list(sX="x",sY="y"),
aesthetic=list(X="sX",Y="sY"),
geom="point")})
})
source("g3plot/shiny_extend_g3.R")
require(shiny)
install.packages("shiney")
require(shiny)
install.packages("shiny")
require(shiny)
source("g3plot/shiny_extend_g3.R")
addResourcePath("js",tools:::file_path_as_absolute("./g3plot/js"))
shinyServer(function(input,output,session){
output$testplot = renderG3Plot(function() {
dataSet = data.frame(x=1:10,y=1:10)
list(type="plot",
table=forceTableVector(dataSet),
structure=list(sX="x",sY="y"),
aesthetic=list(X="sX",Y="sY"),
geom="point")})
})
library("JGR")
deducer()
library("Deducer")
deducer()
JGR()
file_locationPC <- c("C:/Users/KGH/OneDrive/Documents/Xuanwei/Xuanwei_ForAnalysis_31Mar15.csv") ##From Surface
Xuanwei_ForAnalysis_31Mar15 <- read.csv(file_locationPC)
X<-subset(Xuanwei_ForAnalysis_31Mar15, village != "Xuanwei")
View(X)
plot(x$conc[X$samper=="Night"] ~ sitenum, data = X, log="y",axes = FALSE,
frame.plot=TRUE,ylab =
expression(paste("Concentration ( ",mu,"g/m^3",")",sep ="")),
xlab="Site Number",main="")
plot(X$conc[X$samper=="Night"] ~ sitenum, data = X, log="y",axes = FALSE,
frame.plot=TRUE,ylab = expression(paste("Concentration ( ",mu,"g/m^3",
")",sep ="")),
xlab="Site Number",main="")
plot(X$conc[X$samper=="Night"] ~ X$sitenum, log="y",axes = FALSE,
frame.plot=TRUE,ylab = expression(paste("Concentration ( ",mu,"g/m^3",
")",sep ="")),
xlab="Site Number",main="")
plot(X$conc[X$samper=="Night" & "Day"] ~ X$sitenum, log="y",axes = FALSE,
frame.plot=TRUE,ylab = expression(paste("Concentration ( ",mu,"g/m^3",
")",sep ="")),
xlab="Site Number",main="")
plot(X$conc[X$samper == "Day"] ~ X$sitenum, log="y",axes = FALSE,
frame.plot=TRUE,ylab = expression(paste("Concentration ( ",mu,"g/m^3",
")",sep ="")),
xlab="Site Number",main="")
plot(X$conc ~ X$sitenum, log="y",axes = FALSE,
frame.plot=TRUE,ylab = expression(paste("Concentration ( ",mu,"g/m^3",
")",sep ="")),
xlab="Site Number",main="")
plot(X$conc ~ X$sitenum, log="y",axes = FALSE,ylab = expression(paste("Concentration ( ",mu,"g/m^3",
")",sep ="")),
xlab="Site Number",main="")
plot(X$conc ~ X$sitenum, log="y",ylab = expression(paste("Concentration ( ",mu,"g/m^3",
")",sep ="")),
xlab="Site Number",main="")
points(conc[,samper == "Night"],col=1,pch=19)
points(am_avgmeans_x,col=8,pch=15)
points(X$conc[,samper == "Night"],col=1,pch=19)
points(X$conc[,X$samper == "Night"],col=1,pch=19)
file_locationPC2 <- c("C:/Users/KGH/OneDrive/Documents/Xuanwei/Xuanwei_ForAnalysis_Test.csv") ##From Surface
Xuanwei_ForAnalysis <- read.csv(file_locationPC2)
X <- sub(Xuanwei_ForAnalysis, village != "Xuanwei")
X <- subset(Xuanwei_ForAnalysis, village != "Xuanwei")
#summaryBy( X2NP_ugV + X2NFL_ugV  +  X1NP_ugV  ~ sitenum + location, data=X2, id = NULL, keep.names=TRUE, FUN=mean, na.rm = TRUE)
head(X)
summaryBy( Levo_ugV  ~ sitenum + location, data=X2, id = NULL, keep.names=TRUE, FUN=mean, na.rm = TRUE)
library(doBy)
summaryBy( Levo_ugV  ~ sitenum + location, data=X2, id = NULL, keep.names=TRUE, FUN=mean, na.rm = TRUE)
summaryBy( Levo_ugV  ~ sitenum + location, data=X, id = NULL, keep.names=TRUE, FUN=mean, na.rm = TRUE)
getwd()
setwd("C:/Users/KGH/OneDrive/Documents/Xuanwei/air-comp")
if (system2("java","-version")) {
stop("Java not found. Install Java first. https://java.com/en/download/")
}
for (pkg in c("knitr", "RCurl", "doBy", "psych", "beeswarm", "ggplot2",
"reshape2", "scales")) {
if (! suppressWarnings(require(pkg, character.only=TRUE)) ) {
install.packages(pkg, repos="http://cran.fhcrc.org", dependencies=TRUE)
if (! suppressWarnings(require(pkg, character.only=TRUE)) ) {
stop(paste0(c("Can't load package: ", pkg, "!"), collapse = ""))
}
}
}
opts_chunk$set(tidy=FALSE, cache=FALSE)
file_PC <- c("C:/Users/KGH/OneDrive/Documents/Xuanwei/air-comp/Xuanwei_ForAnalysis_Test.csv")
X <- subset(read.csv(file_PC),village != "Xuanwei")
# Mass, levo, nitro, BaP, metals
mass.site <- droplevels(
summaryBy(conc ~ sitenum + location + village, data=X,id = NULL,
keep.names=TRUE, FUN=mean, na.rm = TRUE))
levo.site <- droplevels(
summaryBy( Levo_ugV ~ sitenum + location + village, data=X, id = NULL,
keep.names=TRUE, FUN=mean, na.rm = TRUE))
nitro.site <- droplevels(
summaryBy( X1NP_ugV + X2NP_ugV + X2NFL_ugV ~ sitenum + location + village,
data=X, id = NULL, keep.names=TRUE, FUN=mean, na.rm = TRUE))
BaP.site <- droplevels(
summaryBy( Benzo.a.pyrene_ugV  ~ sitenum + location, data=X, id = NULL,
keep.names=TRUE, FUN=mean, na.rm = TRUE))
metals <- droplevels(
summaryBy( PbConcV + AsConcV + SeConcV  ~ sitenum + location, data=X,
id = NULL, keep.names=TRUE, FUN=mean, na.rm = TRUE))
boxplot(conc~village, data=mass.site, pch=19,
ylab=expression(paste("Concentration ( ",mu,"g/m^3",")",sep ="")),
main="",xlab = "Village", log="y", ylim=c(20,2000))
beeswarm(conc~village, data=mass.site, pwpch=ifelse(location=="Home",19,15),
pwcol=ifelse(location=="Home",1,8),log="TRUE", add=TRUE,
ylim=c(20,2000))
abline(h=35, lty=4, col=1)
legend("topright", c("Indoor", "Outdoor","NAAQS 35 ug/m^3"),
col=c(1,8), pch=c(19,15,NA),lty=c(NA,NA,4))
mass.site[,"inrank"] <- c(6,6,9,9,7,7,4,4,1,1,2,2,5,5,8,8,3,3)
mass.in.points <- subset(mass.site, location == "Home")
mass.out.points <- subset(mass.site, location == "Ambient")
int <- order(am.in.points$conc)
plot(conc ~ inrank, data = am.site, type = "n", log="y",axes = FALSE,
frame.plot=TRUE,ylab =
expression(paste("Concentration ( ",mu,"g/m^3",")",sep ="")),
xlab="Site Number",main="")
plot(conc ~ inrank, data = mass.site, type = "n", log="y",axes = FALSE,
frame.plot=TRUE,ylab =
expression(paste("Concentration ( ",mu,"g/m^3",")",sep ="")),
xlab="Site Number",main="")
points(mass.in.points$inrank,mass.in.points$conc,col=1,pch=19)
points(mass.out.points$inrank,mass.out.points$conc,col=8,pch=15)
Axis(side=1, at = 1:9, labels=c(6,9,7,4,1,2,5,8,3))
Axis(side=2, labels=TRUE)
abline(h=35, lty=4, col=1)
legend("topleft", c("Indoor","Outdoor","NAAQS 35 ug/m^3"),col=c(1,8,1),
pch=c(19,15,NA),lty=c(NA,NA,4))
View(mass.site)
plot(conc ~ sitenum, data = mass.site, type = "n", log="y",axes = FALSE,
frame.plot=TRUE,ylab =
expression(paste("Concentration ( ",mu,"g/m^3",")",sep ="")),
xlab="Site Number",main="")
points(mass.in.points$sitenum,mass.in.points$conc,col=1,pch=19)
points(mass.out.points$sitenum,mass.out.points$conc,col=8,pch=15)
Axis(side=1, at = 1:9, labels=c(6,9,7,4,1,2,5,8,3))
Axis(side=2, labels=TRUE)
abline(h=35, lty=4, col=1)
legend("topleft", c("Indoor","Outdoor","NAAQS 35 ug/m^3"),col=c(1,8,1),
pch=c(19,15,NA),lty=c(NA,NA,4))
Axis(side=1, at = 1:9, labels=c(1:9))
plot(conc ~ sitenum, data = mass.site, type = "n", log="y",axes = FALSE,
frame.plot=TRUE,ylab =
expression(paste("Concentration ( ",mu,"g/m^3",")",sep ="")),
xlab="Site Number",main="")
points(mass.in.points$sitenum,mass.in.points$conc,col=1,pch=19)
points(mass.out.points$sitenum,mass.out.points$conc,col=8,pch=15)
Axis(side=1, at = 1:9, labels=c(1:9))
abline(h=35, lty=4, col=1)
legend("topright", c("Indoor","Outdoor","NAAQS 35 ug/m^3"),col=c(1,8,1),
pch=c(19,15,NA),lty=c(NA,NA,4))
plot(conc ~ sitenum, data = mass.site, type = "n", log="y",axes = FALSE,
frame.plot=TRUE,ylab =
expression(paste("Concentration ( ",mu,"g/m^3",")",sep ="")),
xlab="Site Number",main="")
points(sitenum ~ conc,col=1,pch=19)
points(sitenum ~ conc,data = mass.site, col=1,pch=19)
points(conc ~ sitenum,data = mass.site, col=1,pch=19)
points(conc ~ sitenum,data = subset(mass.site, location == "Home", col=1,pch=19)
plot(conc ~ sitenum, data = mass.site, type = "n", log="y",axes = FALSE,
frame.plot=TRUE,ylab =
expression(paste("Concentration ( ",mu,"g/m^3",")",sep ="")),
xlab="Site Number",main="")
points(conc ~ sitenum,data = subset(mass.site, location == "Home", col=1,pch=19)
plot(conc ~ sitenum, data = mass.site, type = "n", log="y",axes = FALSE,
frame.plot=TRUE,ylab =
expression(paste("Concentration ( ",mu,"g/m^3",")",sep ="")),
xlab="Site Number",main="")
points(conc ~ sitenum,data = subset(mass.site, location == "Home", col=1,pch=19)
points(conc ~ sitenum,data = subset(mass.site, location == "Home"), col=1,pch=19)
subset(mass.site, location == "Home")
points(conc ~ sitenum,data = subset(mass.site, location == "Home"), col=1,pch=19)
plot(conc ~ sitenum, data = mass.site, type = "n", log="y",axes = FALSE,
frame.plot=TRUE,ylab =
expression(paste("Concentration ( ",mu,"g/m^3",")",sep ="")),
xlab="Site Number",main="")
points(conc ~ sitenum,data = subset(mass.site, location == "Home"), col=1,pch=19)
pointsconc ~ sitenum,data = subset(mass.site, location == "Ambient"), col=1,pch=19)
points(conc ~ sitenum,data = subset(mass.site, location == "Ambient"), col=1,pch=19)
plot(conc ~ sitenum, data = mass.site, type = "n", log="y",axes = FALSE,
frame.plot=TRUE,ylab =
expression(paste("Concentration ( ",mu,"g/m^3",")",sep ="")),
xlab="Site Number",main="")
points(conc ~ sitenum,data = subset(mass.site, location == "Home"), col=1,pch=19)
points(conc ~ sitenum,data = subset(mass.site, location == "Ambient"), col=8,pch=15)
Axis(side=1, at = 1:9, labels=c(1:9))
Axis(side=2, labels=TRUE)
abline(h=35, lty=4, col=1)
legend("topright", c("Indoor","Outdoor","NAAQS 35 ug/m^3"),col=c(1,8,1),
pch=c(19,15,NA),lty=c(NA,NA,4))
plot(conc ~ sitenum, data = mass.site, type = "n", log="y",axes = FALSE,
frame.plot=TRUE,ylab =
expression(paste("Concentration ( ",mu,"g/m^3",")",sep ="")),
xlab="Site Number",main="")
points(conc ~ sitenum,data = subset(mass.site, location == "Home"), col=1,pch=19)
points(conc ~ sitenum,data = subset(mass.site, location == "Ambient"), col=8,pch=15)
Axis(side=1, at = 1:9, labels=c(1:9))
Axis(side=2, labels=TRUE)
abline(h=35, lty=4, col=1)
legend("topright", c("Indoor","Outdoor","NAAQS 35 ug/m^3"),col=c(1,8,1),
pch=c(19,15,NA),lty=c(NA,NA,4))
mass.site[,"inrank"] <- c(6,6,9,9,7,7,4,4,1,1,2,2,5,5,8,8,3,3)
mass.in.points <- subset(mass.site, location == "Home")
mass.out.points <- subset(mass.site, location == "Ambient")
int <- order(mass.in.points$conc)
int_sorted <- mass.in.points[int,]
plot(conc ~ inrank, data = mass.site, type = "n", log="y",axes = FALSE,
frame.plot=TRUE,ylab =
expression(paste("Concentration ( ",mu,"g/m^3",")",sep ="")),
xlab="Site Number",main="")
points(mass.in.points$inrank,mass.in.points$conc,col=1,pch=19)
points(mass.out.points$inrank,mass.out.points$conc,col=8,pch=15)
Axis(side=1, at = 1:9, labels=c(6,9,7,4,1,2,5,8,3))
Axis(side=2, labels=TRUE)
abline(h=35, lty=4, col=1)
legend("topleft", c("Indoor","Outdoor","NAAQS 35 ug/m^3"),col=c(1,8,1),
pch=c(19,15,NA),lty=c(NA,NA,4))
View(mass.site)
View(int_sorted)
View(int_sorted)
View(mass.in.points)
plot(conc ~ inrank, data = mass.site, type = "n", log="y",axes = FALSE,
frame.plot=TRUE,ylab =
expression(paste("Concentration ( ",mu,"g/m^3",")",sep ="")),
xlab="Site Number",main="")
points(mass.in.points$inrank,mass.in.points$conc,col=1,pch=19)
points(mass.out.points$inrank,mass.out.points$conc,col=8,pch=15)
Axis(side=1, at = 1:9, labels=c(5,6,9,4,7,1,3,8,2))
Axis(side=2, labels=TRUE)
abline(h=35, lty=4, col=1)
legend("topleft", c("Indoor","Outdoor","NAAQS 35 ug/m^3"),col=c(1,8,1),
pch=c(19,15,NA),lty=c(NA,NA,4))
par(mfrow=c(2,1))
plot(conc ~ sitenum, data = mass.site, type = "n", log="y",axes = FALSE,
frame.plot=TRUE,ylab =
expression(paste("Concentration ( ",mu,"g/m^3",")",sep ="")),
xlab="Site Number",main="")
points(conc ~ sitenum,data = subset(mass.site, location == "Home"), col=1,pch=19)
points(conc ~ sitenum,data = subset(mass.site, location == "Ambient"), col=8,pch=15)
Axis(side=1, at = 1:9, labels=c(1:9))
Axis(side=2, labels=TRUE)
abline(h=35, lty=4, col=1)
legend("topright", c("Indoor","Outdoor","NAAQS 35 ug/m^3"),col=c(1,8,1),
pch=c(19,15,NA),lty=c(NA,NA,4))
mass.site[,"inrank"] <- c(6,6,9,9,7,7,4,4,1,1,2,2,5,5,8,8,3,3)
mass.in.points <- subset(mass.site, location == "Home")
mass.out.points <- subset(mass.site, location == "Ambient")
int <- order(mass.in.points$conc)
int_sorted <- mass.in.points[int,]
plot(conc ~ inrank, data = mass.site, type = "n", log="y",axes = FALSE,
frame.plot=TRUE,ylab =
expression(paste("Concentration ( ",mu,"g/m^3",")",sep ="")),
xlab="Site Number",main="")
points(mass.in.points$inrank,mass.in.points$conc,col=1,pch=19)
points(mass.out.points$inrank,mass.out.points$conc,col=8,pch=15)
Axis(side=1, at = 1:9, labels=c(5,6,9,4,7,1,3,8,2))
Axis(side=2, labels=TRUE)
abline(h=35, lty=4, col=1)
legend("topleft", c("Indoor","Outdoor","NAAQS 35 ug/m^3"),col=c(1,8,1),
pch=c(19,15,NA),lty=c(NA,NA,4))
